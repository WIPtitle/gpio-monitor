openapi: 3.0.0
info:
  title: GPIO Monitor REST API
  description: Real-time GPIO monitoring service with SSE support and dynamic configuration
  version: 2.1.0
  contact:
    name: Matteo Galvagni
    email: galvagni.matteo@protonmail.com

servers:
  - url: http://{{host}}:{{port}}
    description: GPIO Monitor Server
    variables:
      host:
        default: localhost
        description: Server hostname or IP address
      port:
        default: '8787'
        description: Server port

tags:
  - name: Monitoring
    description: Pin monitoring operations
  - name: Configuration
    description: Pin configuration operations
  - name: State
    description: Pin state operations

paths:
  /api/pins:
    get:
      tags:
        - Monitoring
      summary: Get all pins information
      description: Returns information about all monitored, available, and reserved pins with their current states and configurations
      operationId: getAllPins
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  monitored:
                    type: array
                    items:
                      type: integer
                    example: [17, 27]
                  available:
                    type: array
                    items:
                      type: integer
                    example: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                  reserved:
                    type: object
                    additionalProperties:
                      type: string
                    example:
                      '2': 'SDA1 (I2C)'
                      '3': 'SCL1 (I2C)'
                      '14': 'TXD0 (UART)'
                      '15': 'RXD0 (UART)'
                  states:
                    type: object
                    additionalProperties:
                      type: integer
                      enum: [0, 1]
                    example:
                      '17': 0
                      '27': 1
                  config:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        pull:
                          type: string
                          enum: [up, down, none]
                        debounce_low:
                          type: integer
                          minimum: 1
                          maximum: 10
                          description: Threshold for HIGH to LOW transition
                        debounce_high:
                          type: integer
                          minimum: 1
                          maximum: 10
                          description: Threshold for LOW to HIGH transition
                    example:
                      '17':
                        pull: down
                        debounce_low: 6
                        debounce_high: 8

    delete:
      tags:
        - Monitoring
      summary: Clear all monitored pins
      description: Removes all pins from monitoring and clears all configurations
      operationId: clearAllPins
      responses:
        '200':
          description: All pins cleared
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Cleared all monitored pins'

  /api/pins/{pin}:
    post:
      tags:
        - Monitoring
      summary: Add pin to monitoring
      description: Adds a GPIO pin to the monitoring list. Will warn if the pin has a special function.
      operationId: addPin
      parameters:
        - name: pin
          in: path
          required: true
          description: GPIO pin number
          schema:
            type: integer
            minimum: 0
            maximum: 27
      responses:
        '200':
          description: Pin added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Added GPIO 17 to monitoring'
                  monitored:
                    type: array
                    items:
                      type: integer
                    example: [17, 27]
                  warning:
                    type: string
                    description: Warning message if pin has special function
                    example: 'GPIO 2 has special function: SDA1 (I2C)'
        '400':
          description: Invalid pin number or pin not available
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'GPIO 50 not available'
        '409':
          description: Pin already monitored
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'GPIO 17 already monitored'

    delete:
      tags:
        - Monitoring
      summary: Remove pin from monitoring
      description: Removes a GPIO pin from monitoring and clears its configuration
      operationId: removePin
      parameters:
        - name: pin
          in: path
          required: true
          description: GPIO pin number
          schema:
            type: integer
            minimum: 0
            maximum: 27
      responses:
        '200':
          description: Pin removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Removed GPIO 17 from monitoring'
                  monitored:
                    type: array
                    items:
                      type: integer
                    example: [27]
        '400':
          description: Invalid pin number
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid pin number'
        '404':
          description: Pin not monitored
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'GPIO 17 not monitored'

  /api/pins/{pin}/state:
    get:
      tags:
        - State
      summary: Get pin state
      description: Returns the current state (HIGH/LOW) of a monitored GPIO pin
      operationId: getPinState
      parameters:
        - name: pin
          in: path
          required: true
          description: GPIO pin number
          schema:
            type: integer
            minimum: 0
            maximum: 27
      responses:
        '200':
          description: Pin state retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pin:
                    type: integer
                    example: 17
                  state:
                    type: integer
                    enum: [0, 1]
                    description: '0 = LOW, 1 = HIGH'
                    example: 0
        '400':
          description: Invalid pin number
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid pin number'
        '404':
          description: Pin not monitored
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Pin 17 not monitored'

  /api/pins/{pin}/pull:
    put:
      tags:
        - Configuration
      summary: Set pull resistor
      description: Configures the pull resistor for a monitored GPIO pin
      operationId: setPullResistor
      parameters:
        - name: pin
          in: path
          required: true
          description: GPIO pin number
          schema:
            type: integer
            minimum: 0
            maximum: 27
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mode
              properties:
                mode:
                  type: string
                  enum: [up, down, none]
                  description: Pull resistor mode
            examples:
              pullUp:
                summary: Enable pull-up
                value:
                  mode: up
              pullDown:
                summary: Enable pull-down
                value:
                  mode: down
              noPull:
                summary: Disable pull resistor
                value:
                  mode: none
      responses:
        '200':
          description: Pull resistor configured
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Set GPIO 17 to pull-down'
        '400':
          description: Invalid request or mode
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Mode must be 'up', 'down', or 'none'"
        '404':
          description: Pin not monitored
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'GPIO 17 not monitored'

  /api/pins/{pin}/debounce:
    put:
      tags:
        - Configuration
      summary: Set asymmetric debounce thresholds
      description: |
        Configures asymmetric debouncing for a GPIO pin to filter noise and false triggers.
        Requires both LOW and HIGH threshold values.
        
        - LOW threshold: Applied for HIGH→LOW transitions
        - HIGH threshold: Applied for LOW→HIGH transitions
        - Values from 1-10 (1=minimal filtering, 10=maximum filtering)
        - Each reading cycle takes ~1 second (10 readings at 0.1s intervals)
      operationId: setDebounce
      parameters:
        - name: pin
          in: path
          required: true
          description: GPIO pin number
          schema:
            type: integer
            minimum: 0
            maximum: 27
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - low
                - high
              properties:
                low:
                  type: integer
                  minimum: 1
                  maximum: 10
                  description: Threshold for HIGH→LOW transition (1-10 readings out of 10)
                high:
                  type: integer
                  minimum: 1
                  maximum: 10
                  description: Threshold for LOW→HIGH transition (1-10 readings out of 10)
            examples:
              symmetric:
                summary: Symmetric filtering (same for both transitions)
                value:
                  low: 5
                  high: 5
              asymmetricFastRising:
                summary: Fast rising edge, slow falling edge
                value:
                  low: 7
                  high: 3
              asymmetricFastFalling:
                summary: Fast falling edge, slow rising edge
                value:
                  low: 3
                  high: 7
              maximum:
                summary: Maximum filtering for both transitions
                value:
                  low: 10
                  high: 10
      responses:
        '200':
          description: Debounce configured
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Set GPIO 17 debouncing: LOW=6/10, HIGH=8/10'
        '400':
          description: Invalid request or threshold values
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - "Both 'low' and 'high' must be integers"
                      - "Thresholds must be between 1 and 10"
        '404':
          description: Pin not monitored
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'GPIO 17 not monitored'

    delete:
      tags:
        - Configuration
      summary: Remove debounce
      description: Removes debouncing from a GPIO pin, events will be emitted immediately on state change
      operationId: removeDebounce
      parameters:
        - name: pin
          in: path
          required: true
          description: GPIO pin number
          schema:
            type: integer
            minimum: 0
            maximum: 27
      responses:
        '200':
          description: Debounce removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Removed debouncing from GPIO 17'
        '400':
          description: Invalid pin number
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid pin number'
        '404':
          description: Pin not monitored
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'GPIO 17 not monitored'

  /api/pins/{pin}/inverted:
    put:
      tags:
        - Configuration
      summary: Set inverted logic
      description: |
        Configures inverted logic for a GPIO pin. When enabled, the pin will 
        display HIGH when physically LOW and vice versa. This only affects 
        the displayed state, not the actual internal state.
      operationId: setInverted
      parameters:
        - name: pin
          in: path
          required: true
          description: GPIO pin number
          schema:
            type: integer
            minimum: 0
            maximum: 27
      responses:
        '200':
          description: Inverted logic configured
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Set GPIO 17 to inverted logic'
        '404':
          description: Pin not monitored
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'GPIO 17 not monitored'

    delete:
      tags:
        - Configuration
      summary: Remove inverted logic
      description: Removes inverted logic from a GPIO pin, returning to normal display
      operationId: removeInverted
      parameters:
        - name: pin
          in: path
          required: true
          description: GPIO pin number
          schema:
            type: integer
            minimum: 0
            maximum: 27
      responses:
        '200':
          description: Inverted logic removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Removed inverted logic from GPIO 17'
        '404':
          description: Pin not monitored
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'GPIO 17 not monitored'
  /events:
    get:
      tags:
        - State
      summary: Server-Sent Events stream
      description: |
        Connect to this endpoint to receive real-time GPIO state changes.
        
        Event types:
        - `init`: Initial state of all monitored pins
        - `gpio_rising`: Pin changed from LOW to HIGH
        - `gpio_falling`: Pin changed from HIGH to LOW
        
        Events include confidence level when debouncing is enabled.
        
        This is an SSE endpoint, not a regular REST endpoint.
      operationId: eventStream
      responses:
        '200':
          description: SSE stream established
          content:
            text/event-stream:
              schema:
                type: string
                example: |
                  event: init
                  data: {"pins": {"17": 0, "27": 1}, "monitored": [17, 27], "available": [2, 3, ...], "timestamp": 1699123456789}
                  
                  event: gpio_rising
                  data: {"pin": 17, "state": 1, "previous": 0, "timestamp": 1699123456789, "time": "14:23:45.123", "confidence": "8/10"}
                  
                  event: gpio_falling
                  data: {"pin": 17, "state": 0, "previous": 1, "timestamp": 1699123456789, "time": "14:23:45.123", "confidence": "6/10"}

  /:
    get:
      tags:
        - Monitoring
      summary: Web Dashboard
      description: Returns the HTML web dashboard for visual GPIO monitoring
      operationId: webDashboard
      responses:
        '200':
          description: HTML dashboard
          content:
            text/html:
              schema:
                type: string
                description: HTML page with real-time GPIO monitoring interface